framework:
  test: true
  http_method_override: false
  secret: 'test'

chargecloud_avro_messenger_serializer:
  schema_dirs:
    - '%kernel.project_dir%/tests/Fixtures/config/avro'
    - '%kernel.project_dir%/tests/Fixtures/config/schema'
  schema_registry:
    base_uri: 'http://schema-registry.local'
    register_missing_schemas: true
    register_missing_subjects: true
  messages:
    Chargecloud\AvroMessengerSerializerBundle\Tests\Fixtures\Message\ConfiguredMessage:
      key_subject: 'Chargecloud.Tests.ConfiguredKey'
      value_subject: 'Chargecloud.Tests.ConfiguredValue'
      header_provider: 'test.header_provider'

services:
  _defaults:
    autowire: true
    autoconfigure: true
    public: true

  test.header_provider:
    class: Chargecloud\AvroMessengerSerializerBundle\Tests\Fixtures\Messaging\TestHeaderProvider

  Chargecloud\AvroMessengerSerializerBundle\Messenger\AvroMessengerSerializer: ~

  Chargecloud\AvroMessengerSerializerBundle\Tests\Fixtures\Schema\InMemoryRegistry: ~

  Chargecloud\AvroMessengerSerializerBundle\Tests\Fixtures\Messaging\FakeRecordSerializer:
    arguments:
      $registry: '@Chargecloud\AvroMessengerSerializerBundle\Tests\Fixtures\Schema\InMemoryRegistry'

  Chargecloud\AvroMessengerSerializerBundle\Messenger\RecordEncoder:
    arguments:
      $recordSerializer: '@Chargecloud\AvroMessengerSerializerBundle\Tests\Fixtures\Messaging\FakeRecordSerializer'
      $schemaRepository: '@Chargecloud\AvroMessengerSerializerBundle\Schema\SchemaRepository'
      $schemaRegistry: '@Chargecloud\AvroMessengerSerializerBundle\Tests\Fixtures\Schema\InMemoryRegistry'
      $registerMissingSchemas: '%chargecloud_avro_messenger_serializer.register_missing_schemas%'
      $registerMissingSubjects: '%chargecloud_avro_messenger_serializer.register_missing_subjects%'
